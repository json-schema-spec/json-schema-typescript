[
  {
    "name": "reference to arbitrary part of the same schema",
    "registry": [],
    "schema": {
      "foobar": {
        "baz": {
          "type": "null"
        }
      },
      "$ref": "#/foobar/baz"
    },
    "instances": [
      {
        "instance": null,
        "errors": []
      },
      {
        "instance": true,
        "errors": [
          {
            "instancePath": "",
            "schemaPath": "/foobar/baz/type"
          }
        ]
      }
    ]
  },
  {
    "name": "nested references in same schema",
    "registry": [],
    "schema": {
      "foobar": {
        "baz": {
          "$ref": "#/foobar2/baz"
        }
      },
      "foobar2": {
        "baz": {
          "type": "null"
        }
      },
      "$ref": "#/foobar/baz"
    },
    "instances": [
      {
        "instance": null,
        "errors": []
      },
      {
        "instance": true,
        "errors": [
          {
            "instancePath": "",
            "schemaPath": "/foobar2/baz/type"
          }
        ]
      }
    ]
  },
  {
    "name": "references to other schemas",
    "registry": [
      {
        "$id": "http://example.com/foo",
        "type": "null"
      }
    ],
    "schema": {
      "$ref": "http://example.com/foo#"
    },
    "instances": [
      {
        "instance": null,
        "errors": []
      },
      {
        "instance": true,
        "errors": [
          {
            "instancePath": "",
            "schemaPath": "/type",
            "uri": "http://example.com/foo"
          }
        ]
      }
    ]
  },
  {
    "name": "nested references to other schemas",
    "registry": [
      {
        "$id": "http://example.com/foo",
        "$ref": "http://example.com/bar"
      },
      {
        "$id": "http://example.com/bar",
        "type": "null"
      }
    ],
    "schema": {
      "$ref": "http://example.com/foo"
    },
    "instances": [
      {
        "instance": null,
        "errors": []
      },
      {
        "instance": true,
        "errors": [
          {
            "instancePath": "",
            "schemaPath": "/type",
            "uri": "http://example.com/bar"
          }
        ]
      }
    ]
  },
  {
    "name": "recursive schema",
    "registry": [],
    "schema": {
      "items": {
        "$ref": "#"
      },
      "type": "array"
    },
    "instances": [
      {
        "instance": [],
        "errors": []
      },
      {
        "instance": [
          [],
          "a"
        ],
        "errors": [
          {
            "instancePath": "/1",
            "schemaPath": "/type"
          }
        ]
      },
      {
        "instance": [
          [],
          [
            []
          ],
          [
            [
              [],
              [
                "a"
              ]
            ]
          ]
        ],
        "errors": [
          {
            "instancePath": "/2/0/1/0",
            "schemaPath": "/type"
          }
        ]
      }
    ]
  },
  {
    "name": "mutually recursive schemas",
    "registry": [
      {
        "$id": "http://example.com/foo",
        "items": {
          "$ref": "http://example.com/bar"
        }
      },
      {
        "$id": "http://example.com/bar",
        "$ref": "http://example.com/foo",
        "type": "array"
      }
    ],
    "schema": {
      "$ref": "http://example.com/bar"
    },
    "instances": [
      {
        "instance": [],
        "errors": []
      },
      {
        "instance": [
          [],
          "a"
        ],
        "errors": [
          {
            "instancePath": "/1",
            "schemaPath": "/type",
            "uri": "http://example.com/bar"
          }
        ]
      },
      {
        "instance": [
          [],
          [
            []
          ],
          [
            [
              [],
              [
                "a"
              ]
            ]
          ]
        ],
        "errors": [
          {
            "instancePath": "/2/0/1/0",
            "schemaPath": "/type",
            "uri": "http://example.com/bar"
          }
        ]
      }
    ]
  },
  {
    "name": "changing base URI",
    "registry": [
      {
        "$id": "http://example.com/foo",
        "$ref": "#/foobar/baz",
        "foobar": {
          "baz": {
            "type": "null"
          }
        }
      }
    ],
    "schema": {
      "$ref": "http://example.com/foo",
      "foobar": {
        "baz": {
          "type": "string"
        }
      }
    },
    "instances": [
      {
        "instance": null,
        "errors": []
      },
      {
        "instance": "foo",
        "errors": [
          {
            "instancePath": "",
            "schemaPath": "/foobar/baz/type",
            "uri": "http://example.com/foo"
          }
        ]
      }
    ]
  },
  {
    "name": "relative URL handling",
    "registry": [
      {
        "$id": "http://example.com/foo/",
        "$ref": "#/foobar/baz",
        "foobar": {
          "baz": {
            "type": "null"
          }
        }
      },
      {
        "$id": "http://example.com/foo/bar/baz",
        "$ref": "../#/foobar/baz"
      }
    ],
    "schema": {
      "$ref": "http://example.com/foo/bar/baz",
      "foobar": {
        "baz": {
          "type": "string"
        }
      }
    },
    "instances": [
      {
        "instance": null,
        "errors": []
      },
      {
        "instance": "foo",
        "errors": [
          {
            "instancePath": "",
            "schemaPath": "/foobar/baz/type",
            "uri": "http://example.com/foo/"
          }
        ]
      }
    ]
  }
]
